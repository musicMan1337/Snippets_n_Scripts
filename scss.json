{
	// Place your snippets for scss here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
  // },
	"New Secion Divider": {
		"prefix": "nsection",
		"body": [
			"/* ===============",
      "     -=SECTION=-",
      "   =============== */",
      "",
      "$0",
		],
		"description": "New Section Divider"
  },
  // *************************************** //
  // *************************************** //
  // *************************************** //
  "Main Sass Boilerplate": {
		"prefix": "!",
		"body": [
      "/* CSS DIRECTORY *",
      "-=TYPOGRAPHY=-   *",
      "-=GLOBAL=-       *",
      "-=HEADER=-       *",
      "-=PRIMARY=-      *",
      "-=SIDEBAR=-      *",
      "-=FOOTER=-       *",
      "* * * * * * * * */",
      "",
      "/* ===============",
      "   -=TYPOGRAPHY=-",
      "   =============== */",
      "",
      "/* ========== CSS Reset ========== */",
      "",
      "html, body, div, span, applet, object, iframe,",
      "h1, h2, h3, h4, h5, h6, p, blockquote, pre,",
      "a, abbr, address, big, br, cite, code, del,",
      "dfn, em, hr, img, ins, kbd, q, s, samp, small,",
      "strike, strong, sub, sup, tt, var, b, u, i,",
      "dl, dt, dd, ol, ul, li, button, caption, input,",
      "fieldset, form, label, legend, output, table,",
      "textarea, tbody, tfoot, thead, tr, th, td,",
      "article, aside, audio, canvas, details, embed,",
      "figure, figcaption, footer, header, hgroup,",
      "main, mark, menu, nav, option, output, ruby,",
      "section, select, summary, time, video {",
      "  border: 0;",
      "  border-collapse: collapse;",
      "  display: flex;",
      "  flex-direction: column;",
      "  margin: 0;",
      "  padding: 0;",
      "  text-decoration: none;",
      "  vertical-align: baseline;",
      "}",
      "",
      "blockquote, button, caption, dd, dt, figcaption,",
      "h1, h2, h3, h4, h5, h6, input, legend, option,",
      "output, p, pre, select, textarea {",
      "  display: block;",
      "}",
      "",
      "a, abbr, acronym, b, bdo, big, br, cite, code, del,",
      "dfn,em, i, ins, kbd, mark, q, samp, s, small, span,",
      "strike, strong, sub, sup, time, tt, var{",
      "  display: inline;",
      "}",
      "",
      "input[type=date], input[type=datetime-local],",
      "input[type=file], input[type=month],",
      "input[type=time], input[type=week], select {",
      "  flex-direction: row;",
      "}",
      "",
      "a, a:link, a:visited, a:hover, a:active {",
      "  background-color: transparent;",
      "  background-image: none;",
      "  color: inherit;",
      "  text-decoration: none;",
      "}",
      "",
      "a img, :link img, :visited img {",
      "  border: none;",
      "}",
      "",
      ":link, :visited {",
      "  text-decoration: none;",
      "}",
      "",
      "ul, ol {",
      "  list-style: none;",
      "}",
      "",
      "img, video {",
      "  max-width: 100%;",
      "}",
      "",
      "address {",
      "  font-style: normal;",
      "}",
      "",
      "body * + * {",
      "  margin-top: 1em;",
      "}",
      "",
      "[hidden] {",
      "  display: none !important;",
      "}",
      "",
      "[disabled] {",
      "  cursor: not-allowed;",
      "}",
      "",
      ":focus:not(:focus-visible) {",
      "  outline: none;",
      "}",
      "",
      ".sr-only {",
      "  clip: rect(1px, 1px, 1px, 1px);",
      "  clip-path: inset(50%);",
      "  height: 1px;",
      "  width: 1px;",
      "  margin: -1px;",
      "  overflow: hidden;",
      "  padding: 0;",
      "  position: absolute;",
      "}",
      "",
      "/* ========== Fluid Element Sizing (px/rem) ========== */",
      "",
      "@mixin fluid-type(\\$properties, \\$min-vw, \\$max-vw, \\$min-value, \\$max-value) {",
      "  @each \\$property in \\$properties {",
      "    #{\\$property}: \\$min-value;",
      "  }",
      "",
      "  @media (min-width: \\$min-vw) {",
      "    @each \\$property in \\$properties {",
      "      #{\\$property}: calc(#{\\$min-value} + #{strip-unit(\\$max-value - \\$min-value)} * (100vw - #{\\$min-vw}) / #{strip-unit(\\$max-vw - \\$min-vw)});",
      "    }",
      "  }",
      "",
      "  @media (min-width: \\$max-vw) {",
      "    @each \\$property in \\$properties {",
      "      #{\\$property}: \\$max-value;",
      "    }",
      "  }",
      "}",
      "",
      "@function strip-unit(\\$number) {",
      "  @if type-of(\\$number) == \"number\" and not unitless(\\$number) {",
      "    @return \\$number / (\\$number * 0 + 1);",
      "  }",
      "  @return \\$number;",
      "}",
      "",
      "// Single property",
      "html {",
      "  @include fluid-type(font-size, 320px, 1400px, 16px, 24px);",
      "}",
      "// Multiple properties with same values (avoid \"em\")",
      "// h1 {",
      "//   @include fluid-type(padding-bottom padding-top, 20rem, 70rem, 2rem, 4rem);",
      "// }",
      "",
      "",
      "/* ===============",
      "     -=GLOBAL=-",
      "   =============== */",
      "",
      "/* ========== Color Themes ========== */",
      "",
      "\\$themes: (",
      "  summer: (",
      "    primary-color: #ffd700,",
      "    secondary-color: #0084b1,",
      "  ),",
      "  winter: (",
      "    primary-color: #7292b5,",
      "    secondary-color: #f0f8ff,",
      "  ),",
      ");",
      "",
      "/*",
      "Current Themes:",
      "  summer:",
      "    primary-color: #ffd700",
      "    secondary-color: #0084b1",
      "  winter:",
      "    primary-color: #7292b5",
      "    secondary-color: #f0f8ff",
      "*/",
      "",
      "@mixin theme(\\$properties, \\$key) {",
      "  @each \\$theme in map-keys(\\$themes) {",
      "    .#{\\$theme} & {",
      "      @each \\$property in \\$properties {",
      "        #{\\$property}: map-deep-get(\\$themes, \\$theme, \\$key);",
      "      }",
      "    }",
      "  }",
      "}",
      "",
      "@function map-deep-get(\\$map, \\$keys...) {",
      "  @each \\$key in \\$keys {",
      "    \\$map: map-get(\\$map, \\$key);",
      "  }",
      "  @return \\$map;",
      "}",
      "",
      "// SYNTAX:",
      "// .class {",
      "//   @include theme(border-bottom border-top, secondary-color);",
      "// }",
      "",
      "/* ========== Fonts ========== */",
      "",
      "// == Font Bank == //",
      "\\$main-font: 'Yantramanav', sans-serif; // font-weight: 100;300;==>400<==;500;700;900",
      "\\$headline-font: 'BenchNine', sans-serif; // font-weight: 300;==>400<==;700",
      "\\$code-font: 'Fira Code', monospace; // font-weight: 300;==>400<==;500;600;700",
      "",
      "html {",
      "  font-family: \\$main-font;",
      "}",
      "",
      ".headline {",
      "  font-family: \\$headline-font;",
      "}",
      "",
      "code, .code {",
      "  font-family: \\$code-font;",
      "}",
      "",
      "/* ===============",
      "     -=HEADER=-",
      "   =============== */",
      "",
      "",
      "   ",
      "/* ===============",
      "     -=PRIMARY=-",
      "   =============== */",
      "",
      "",
      "",
      "/* ===============",
      "     -=SIDEBAR=-",
      "   =============== */",
      "",
      "",
      "",
      "/* ===============",
      "     -=FOOTER=-",
      "   =============== */",
		],
		"description": "Sass Boilerplate"
	}
}